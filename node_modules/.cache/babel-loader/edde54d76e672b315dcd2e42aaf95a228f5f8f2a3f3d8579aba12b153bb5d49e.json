{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Oguzhan\\\\Desktop\\\\react_projects\\\\to-do\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleCheck, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [toDo, setToDo] = useState([{\n    \"id\": 1,\n    \"baslik\": \"Görev 1\",\n    \"durum\": false\n  }, {\n    \"id\": 2,\n    \"baslik\": \"Görev 2\",\n    \"durum\": false\n  }]);\n  const [yeniGorev, setYeniGorev] = useState('');\n  const [gorevGuncelle, setGorevGuncelle] = useState('');\n  const ekleGorev = () => {};\n  const silGorev = id => {};\n  const tamamGorev = id => {};\n  const iptalGorev = () => {};\n  const duzenleGorev = e => {};\n  const guncelGorev = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Yap\\u0131lacaklar Listesi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), toDo && toDo.length ? '' : 'Aktif Görev Yok.', toDo && toDo.sort((a, b) => a.id > b.id ? 1 : -1).map((gorev, index) => {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col gorevBg\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: gorev.durum ? 'yapildi' : '',\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"gorevSirasi\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"gorevText\",\n                children: gorev.baslik\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ikonlar\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                title: \"Yap\\u0131ld\\u0131 / Yap\\u0131lmad\\u0131\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faCircleCheck\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 62\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                title: \"D\\xFCzenle\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faPen\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 50\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                title: \"G\\xF6revi Sil\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faTrashCan\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 53\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 19\n          }, this)\n        }, gorev.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"I2gSD28CA0+lxH4mqcutYMLrTT4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faCircleCheck","faPen","faTrashCan","App","toDo","setToDo","yeniGorev","setYeniGorev","gorevGuncelle","setGorevGuncelle","ekleGorev","silGorev","id","tamamGorev","iptalGorev","duzenleGorev","e","guncelGorev","length","sort","a","b","map","gorev","index","durum","baslik"],"sources":["C:/Users/Oguzhan/Desktop/react_projects/to-do/src/App.js"],"sourcesContent":["import React, {useState} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { \n  faCircleCheck, faPen, faTrashCan\n } from '@fortawesome/free-solid-svg-icons';\n\n import './App.css';\n\nfunction App() {\n  \n  const [toDo, setToDo] = useState([\n    {\"id\":1, \"baslik\": \"Görev 1\", \"durum\": false},\n    {\"id\":2, \"baslik\": \"Görev 2\", \"durum\": false},\n  ]);\n\n  const [yeniGorev, setYeniGorev] = useState('');\n  const [gorevGuncelle, setGorevGuncelle] = useState('');\n  \n  const ekleGorev = () => {\n\n  };\n\n  \n  const silGorev = (id) => {\n    \n  };\n\n  const tamamGorev = (id) => {\n    \n  };\n\n  const iptalGorev = () => {\n    \n  };\n\n  const duzenleGorev = (e) => {\n    \n  };\n\n  const guncelGorev = () => {\n    \n  };\n\n  return (\n    <div className=\"container App\">\n      <h3>Yapılacaklar Listesi</h3>\n        <div className=\"row\">\n          <div className=\"col\">\n\n          \n          </div>\n\n          {toDo && toDo.length ? '' : 'Aktif Görev Yok.'}\n\n          {toDo && toDo\n            .sort((a, b) => a.id > b.id ? 1: -1)\n            .map( (gorev, index) => {\n              return(\n                <React.Fragment key={gorev.id}>\n\n                  <div className=\"col gorevBg\">\n                      <div className={gorev.durum ? 'yapildi' : ''}>\n                        <span className=\"gorevSirasi\">{index + 1}</span>\n                        <span className=\"gorevText\">{gorev.baslik}</span>\n                      </div>\n                      <div className=\"ikonlar\">\n                          <span title=\"Yapıldı / Yapılmadı\"> <FontAwesomeIcon icon={faCircleCheck} /> </span>\n                          <span title=\"Düzenle\"> <FontAwesomeIcon icon={faPen} /> </span>\n                          <span title=\"Görevi Sil\"> <FontAwesomeIcon icon={faTrashCan} /> </span>\n                      </div>\n                  </div>\n\n                \n                  \n                </React.Fragment>\n          )\n        })\n      }\n       </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}