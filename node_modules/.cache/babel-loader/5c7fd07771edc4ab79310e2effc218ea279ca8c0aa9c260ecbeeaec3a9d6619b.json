{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Oguzhan\\\\Desktop\\\\react_projects\\\\to-do\\\\src\\\\components\\\\ToDo.jsx\";\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleCheck, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDo = _ref => {\n  let {\n    toDo,\n    tamamGorev\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: toDo && toDo.sort((a, b) => a.id > b.id ? 1 : -1).map((gorev, index) => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col gorevBg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: gorev.durum ? 'yapildi' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"gorevSirasi\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"gorevText\",\n              children: gorev.baslik\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ikonlar\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Yap\\u0131ld\\u0131 / Yap\\u0131lmad\\u0131\",\n              onClick: e => tamamGorev(gorev.id),\n              children: [\" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCircleCheck\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 101\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 27\n            }, this), gorev.durum ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"D\\xFCzenle\",\n              onClick: () => setGorevGuncelle({\n                id: gorev.id,\n                baslik: gorev.baslik,\n                durum: gorev.durum ? true : false\n              }),\n              children: [\" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 158\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"G\\xF6revi Sil\",\n              onClick: () => silGorev(gorev.id),\n              children: [\" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTrashCan\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 89\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 19\n        }, this)\n      }, gorev.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false);\n};\n_c = ToDo;\nexport default ToDo;\nvar _c;\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["React","FontAwesomeIcon","faCircleCheck","faPen","faTrashCan","ToDo","toDo","tamamGorev","sort","a","b","id","map","gorev","index","durum","baslik","e","setGorevGuncelle","silGorev"],"sources":["C:/Users/Oguzhan/Desktop/react_projects/to-do/src/components/ToDo.jsx"],"sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { \r\n  faCircleCheck, faPen, faTrashCan\r\n } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst ToDo = ({  toDo, tamamGorev }) => {\r\n    return(\r\n        <>\r\n        {toDo && toDo\r\n            .sort((a, b) => a.id > b.id ? 1: -1)\r\n            .map( (gorev, index) => {\r\n              return(\r\n                <React.Fragment key={gorev.id}>\r\n                  <div className=\"col gorevBg\">\r\n                      <div className={gorev.durum ? 'yapildi' : ''}>\r\n                        <span className=\"gorevSirasi\">{index + 1}</span>\r\n                        <span className=\"gorevText\">{gorev.baslik}</span>\r\n                      </div>\r\n                      <div className=\"ikonlar\">\r\n                          <span title=\"Yapıldı / Yapılmadı\" onClick={ (e) => tamamGorev(gorev.id)}> <FontAwesomeIcon icon={faCircleCheck} /> </span>\r\n                          \r\n                          {gorev.durum ? null :(\r\n                            <span title=\"Düzenle\" onClick={() => setGorevGuncelle({id: gorev.id, baslik: gorev.baslik, durum: gorev.durum ? true : false})}> <FontAwesomeIcon icon={faPen} /> </span>\r\n                          )}\r\n                          \r\n                          <span title=\"Görevi Sil\" onClick={() => silGorev(gorev.id)} > <FontAwesomeIcon icon={faTrashCan} /> </span>\r\n                      </div>\r\n                  </div>  \r\n                </React.Fragment>\r\n          )\r\n        })\r\n      }\r\n      </>\r\n    )\r\n    \r\n}\r\n\r\nexport default ToDo;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SACEC,aAAa,EAAEC,KAAK,EAAEC,UAAU,QAC1B,mCAAmC;AAAC;AAAA;AAE5C,MAAMC,IAAI,GAAG,QAA2B;EAAA,IAA1B;IAAGC,IAAI;IAAEC;EAAW,CAAC;EAC/B,oBACI;IAAA,UACCD,IAAI,IAAIA,IAAI,CACRE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,EAAE,GAAGD,CAAC,CAACC,EAAE,GAAG,CAAC,GAAE,CAAC,CAAC,CAAC,CACnCC,GAAG,CAAE,CAACC,KAAK,EAAEC,KAAK,KAAK;MACtB,oBACE,QAAC,KAAK,CAAC,QAAQ;QAAA,uBACb;UAAK,SAAS,EAAC,aAAa;UAAA,wBACxB;YAAK,SAAS,EAAED,KAAK,CAACE,KAAK,GAAG,SAAS,GAAG,EAAG;YAAA,wBAC3C;cAAM,SAAS,EAAC,aAAa;cAAA,UAAED,KAAK,GAAG;YAAC;cAAA;cAAA;cAAA;YAAA,QAAQ,eAChD;cAAM,SAAS,EAAC,WAAW;cAAA,UAAED,KAAK,CAACG;YAAM;cAAA;cAAA;cAAA;YAAA,QAAQ;UAAA;YAAA;YAAA;YAAA;UAAA,QAC7C,eACN;YAAK,SAAS,EAAC,SAAS;YAAA,wBACpB;cAAM,KAAK,EAAC,yCAAqB;cAAC,OAAO,EAAIC,CAAC,IAAKV,UAAU,CAACM,KAAK,CAACF,EAAE,CAAE;cAAA,WAAC,GAAC,uBAAC,eAAe;gBAAC,IAAI,EAAET;cAAc;gBAAA;gBAAA;gBAAA;cAAA,QAAG,KAAC;YAAA;cAAA;cAAA;cAAA;YAAA,QAAO,EAEzHW,KAAK,CAACE,KAAK,GAAG,IAAI,gBACjB;cAAM,KAAK,EAAC,YAAS;cAAC,OAAO,EAAE,MAAMG,gBAAgB,CAAC;gBAACP,EAAE,EAAEE,KAAK,CAACF,EAAE;gBAAEK,MAAM,EAAEH,KAAK,CAACG,MAAM;gBAAED,KAAK,EAAEF,KAAK,CAACE,KAAK,GAAG,IAAI,GAAG;cAAK,CAAC,CAAE;cAAA,WAAC,GAAC,uBAAC,eAAe;gBAAC,IAAI,EAAEZ;cAAM;gBAAA;gBAAA;gBAAA;cAAA,QAAG,KAAC;YAAA;cAAA;cAAA;cAAA;YAAA,QACnK,eAED;cAAM,KAAK,EAAC,eAAY;cAAC,OAAO,EAAE,MAAMgB,QAAQ,CAACN,KAAK,CAACF,EAAE,CAAE;cAAA,WAAE,GAAC,uBAAC,eAAe;gBAAC,IAAI,EAAEP;cAAW;gBAAA;gBAAA;gBAAA;cAAA,QAAG,KAAC;YAAA;cAAA;cAAA;cAAA;YAAA,QAAO;UAAA;YAAA;YAAA;YAAA;UAAA,QACzG;QAAA;UAAA;UAAA;UAAA;QAAA;MACJ,GAfaS,KAAK,CAACF,EAAE;QAAA;QAAA;QAAA;MAAA,QAgBZ;IAEzB,CAAC;EAAC,iBAED;AAGT,CAAC;AAAA,KA9BKN,IAAI;AAgCV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}